/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sistema._de_ticket_dsiii_p2;
import sistema._de_ticket_dsiii_p2.Inicio;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import conector.Conexion;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.util.List;
import java.util.ArrayList;
import sistema._de_ticket_dsiii_p2.Inicio;

/**
 *
 * @author raul1
 */
public class clientView extends javax.swing.JFrame {
    private String idUsuario;
       private String rol;
       private String tituloSeleccionado ;
       private    String idTicket = null;
    Conexion con= new Conexion();  
    Connection conet;
     DefaultTableModel modelo;
    Statement st;
    ResultSet rs;
    int idc;
    /**
     * Creates new form clientView
     */
    public clientView(String idUsuario) {
        this.idUsuario = idUsuario;
        rol="cliente";
        initComponents();
        UIManager.put("OptionPane.yesButtonText", "Sí");
        UIManager.put("OptionPane.noButtonText", "No");
        UIManager.put("OptionPane.cancelButtonText", "Cancelar");
        UIManager.put("OptionPane.okButtonText", "Aceptar");
        cargarMisTickets();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        client_historial = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaTickets = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        catFilter = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        StatFilter = new javax.swing.JComboBox<>();
        filter = new javax.swing.JButton();
        chat = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        catSelect = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        asunto = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descript = new javax.swing.JTextArea();
        create = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        inicio = new javax.swing.JMenu();
        cerrarSesion = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jDesktopPane1.setPreferredSize(new java.awt.Dimension(865, 559));

        client_historial.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        client_historial.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                client_historialPropertyChange(evt);
            }
        });

        tablaTickets.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Asunto", "Categoría", "Fecha", "Estado"
            }
        ));
        tablaTickets.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaTicketsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaTickets);

        jLabel1.setText("Categoría:");

        catFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todas", "Software", "Hardware", "Conexión", "Mantenimiento" }));
        catFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catFilterActionPerformed(evt);
            }
        });

        jLabel2.setText("Estado:");

        StatFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "En Espera", "En Proceso", "Resuelto" }));
        StatFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatFilterActionPerformed(evt);
            }
        });

        filter.setText("Filtrar");
        filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterActionPerformed(evt);
            }
        });

        chat.setText("Contactar al Equipo");
        chat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(StatFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(catFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(filter))
                            .addComponent(chat))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(catFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(StatFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(filter)))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chat)
                .addContainerGap(226, Short.MAX_VALUE))
        );

        client_historial.addTab("MIs Tickets", jPanel2);

        jLabel3.setText("Categoría:");

        catSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar...", "Software", "Hardware", "Conexión", "Mantenimiento", " " }));

        jLabel4.setText("Asunto:");

        jLabel5.setText("Por favor describa el problema:");

        descript.setColumns(20);
        descript.setRows(5);
        jScrollPane2.setViewportView(descript);

        create.setText("Crear");
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createActionPerformed(evt);
            }
        });

        cancel.setText("Cancelar");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(23, 23, 23)
                        .addComponent(asunto, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(catSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(create)
                        .addGap(46, 46, 46)
                        .addComponent(cancel)))
                .addContainerGap(177, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(asunto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(catSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(create)
                    .addComponent(cancel))
                .addContainerGap(208, Short.MAX_VALUE))
        );

        client_historial.addTab("Nuevo", jPanel1);

        jDesktopPane1.setLayer(client_historial, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(client_historial)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(client_historial, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
        );

        inicio.setText("Inicio");

        cerrarSesion.setText("Cerrar Sesión");
        cerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarSesionActionPerformed(evt);
            }
        });
        inicio.add(cerrarSesion);

        jMenuBar1.add(inicio);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 841, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarSesionActionPerformed
        int opcion = JOptionPane.showConfirmDialog(
            null,
            "¿Seguro que deseas cerrar sesión?",
            "Confirmar cierre de sesión",
            JOptionPane.YES_NO_OPTION
        );

        if (opcion == JOptionPane.YES_OPTION) {
            // Cierra la ventana actual
            dispose();

            // Abre la ventana de inicio de sesión
            // Suponiendo que tu clase de login se llama LoginView
            Inicio login = new Inicio();
            login.setVisible(true);
        }        
    }//GEN-LAST:event_cerrarSesionActionPerformed

    
    private void cargarMisTickets() {
        conet = con.getConnection();
        DefaultTableModel model = (DefaultTableModel) tablaTickets.getModel();
        model.setRowCount(0); // Limpia la tabla

        String sql = "SELECT titulo, categoria, fecha_creacion, estado FROM tickets WHERE id_cliente = ?";
        try (PreparedStatement pst = conet.prepareStatement(sql)) {
            pst.setString(1, this.idUsuario); // Usa el id del usuario actual
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                Object[] row = {
                    rs.getString("titulo"),
                    rs.getString("categoria"),
                    rs.getDate("fecha_creacion"),
                    rs.getString("estado")
                };
            model.addRow(row);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al cargar los tickets: " + e.getMessage());
        }
    }
    
    
    
    private void createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createActionPerformed
        conet = con.getConnection();
        try {
        
        String titulo = asunto.getText();
        String descripcion = descript.getText();
        java.sql.Timestamp fechaCreacion = new java.sql.Timestamp(System.currentTimeMillis());
        String categoria = catSelect.getSelectedItem().toString();

        String sql = "INSERT INTO tickets (id_cliente, titulo, descripcion, fecha_creacion, categoria) VALUES (?, ?, ?, ?, ?)";
        PreparedStatement ps = conet.prepareStatement(sql);
        ps.setString(1, this.idUsuario);
        ps.setString(2, titulo);
        ps.setString(3, descripcion);
        ps.setTimestamp(4, fechaCreacion);
        ps.setString(5, categoria);

        int rows = ps.executeUpdate();
        if (rows > 0) {
            JOptionPane.showMessageDialog(this, "Ticket creado exitosamente.");
        } else {
            JOptionPane.showMessageDialog(this, "Error al crear el ticket.");
        }
        ps.close();
        cargarMisTickets();
    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    }
    }//GEN-LAST:event_createActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        asunto.setText("");          
        descript.setText("");       
        catSelect.setSelectedIndex(0);
    }//GEN-LAST:event_cancelActionPerformed

    
    
    private void client_historialPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_client_historialPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_client_historialPropertyChange

    private void filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterActionPerformed
       
        
        
        String categoria = catFilter.getSelectedItem().toString();
        String estado = StatFilter.getSelectedItem().toString();

        
        String sql = "SELECT * FROM tickets WHERE 1=1";
        if (!categoria.equals("Todas")) {
            sql += " AND categoria = ?";
        }
        if (!estado.equals("Todos")) {
            sql += " AND estado = ?";
        }
        conet = con.getConnection();
        try (PreparedStatement pst = conet.prepareStatement(sql)) {
            int index = 1;
            if (!categoria.equals("Todas")) {
                pst.setString(index++, categoria);
            }
            if (!estado.equals("Todos")) {
                pst.setString(index++, estado);
            }

            ResultSet rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel) tablaTickets.getModel();
            model.setRowCount(0); // Limpia la tabla antes de agregar nuevos datos

            while (rs.next()) {
                
                Object[] row = {
                    rs.getString("titulo"),
                    rs.getString("categoria"),
                    rs.getString("fecha_creacion"),
                    rs.getString("estado")
                };
                model.addRow(row);
                
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al filtrar tickets: " + ex.getMessage());
        }

        
    }//GEN-LAST:event_filterActionPerformed

    private void catFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_catFilterActionPerformed

    private void StatFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StatFilterActionPerformed

    private void chatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chatActionPerformed
        if (tituloSeleccionado != null) {
     
        String idTecnico = null;

        Connection conn = con.getConnection();
        PreparedStatement ps = null;
        ResultSet rs = null;

        try {
            // 1. Obtener el id_ticket a partir del título
            String sqlTicket = "SELECT id_ticket FROM tickets WHERE titulo = ?";
            ps = conn.prepareStatement(sqlTicket);
            ps.setString(1, tituloSeleccionado);
            rs = ps.executeQuery();

            if (rs.next()) {
                idTicket = rs.getString("id_ticket");
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró el ticket con ese título.");
                return;
            }

            rs.close();
            ps.close();

            // 2. Obtener el id del técnico asignado al ticket
            String sqlAsignacion = "SELECT id_tecnico FROM asignaciones WHERE id_ticket = ?";
            ps = conn.prepareStatement(sqlAsignacion);
            ps.setString(1, idTicket);
            rs = ps.executeQuery();

            if (rs.next()) {
                idTecnico = rs.getString("id_tecnico");
            } else {
                JOptionPane.showMessageDialog(this, "Este ticket no tiene técnico asignado.");
                return;
            }

            // 3. Abrir la ventana de chat
            Chat dialog = new Chat(null, true, idTicket, rol, idUsuario); // Asegúrate que el constructor acepta eso
            dialog.setVisible(true);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error en la base de datos: " + e.getMessage());
        } finally {
            try {
                if (rs != null) rs.close();
                if (ps != null) ps.close();
                if (conn != null) conn.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error al cerrar conexión: " + e.getMessage());
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Seleccione un ticket de la tabla.");
    }    
               
               
            

    }//GEN-LAST:event_chatActionPerformed

    private void tablaTicketsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaTicketsMouseClicked
          int fila = tablaTickets.getSelectedRow();
    if (fila != -1) {
        tituloSeleccionado  = tablaTickets.getValueAt(fila, 0).toString(); // columna 0 es id_ticket
    }
    }//GEN-LAST:event_tablaTicketsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(clientView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(clientView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(clientView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(clientView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                String idUsuario = (args.length > 0) ? args[0] : "";
                new clientView(idUsuario).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> StatFilter;
    private javax.swing.JTextField asunto;
    private javax.swing.JButton cancel;
    private javax.swing.JComboBox<String> catFilter;
    private javax.swing.JComboBox<String> catSelect;
    private javax.swing.JMenuItem cerrarSesion;
    private javax.swing.JButton chat;
    private javax.swing.JTabbedPane client_historial;
    private javax.swing.JButton create;
    private javax.swing.JTextArea descript;
    private javax.swing.JButton filter;
    private javax.swing.JMenu inicio;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaTickets;
    // End of variables declaration//GEN-END:variables
}
